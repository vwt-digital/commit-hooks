#!/bin/bash

function recover_image() {
  hook_branch=$(cd "$(dirname "$0")"/.. && git rev-parse --abbrev-ref HEAD)

  if [[ $hook_branch == "develop" ]]; then
    echo -e "\e[33mWARNING: you are running a development version of the git hooks! Use the master branch for more" \
      "stable and secure hooks\e[0m"
    docker_image="eu.gcr.io/vwt-d-gew1-dat-cloudbuilders/cloudbuilder-sast"
  else
    docker_image="eu.gcr.io/vwt-p-gew1-dat-cloudbuilders/cloudbuilder-sast"
  fi
}

function move_files() {
  mkdir tmp-pre-commit-folder >/dev/null 2>&1

  OLDIFS=$IFS
  IFS=$'\n'
  for file in $(git diff --cached HEAD --name-only --diff-filter=ACM); do
    dir=$(dirname "$file")
    (cd tmp-pre-commit-folder && mkdir -p "$dir" && git show ":$file" >> "$file")
  done
  IFS=$OLDIFS
}

move_files & recover_image && wait

git_dir=$(git rev-parse --show-toplevel)
exit_code=0

echo ">>> SAST scan..."

if ! docker run hello-world >/dev/null 2>&1; then
  echo -e "\e[1;31mError: Docker run wasn't executed with sufficient permissions." \
    "See this page: https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user" \
    "for instructions on managing Docker as a non-root user.ðŸ”— '\e[0m"
fi

# Copy node_modules
[ -d "$git_dir"/node_modules ] && cp -r "$git_dir"/node_modules tmp-pre-commit-folder
# Copy sast-config
if [[ -d sast-config ]]; then
  cp -r "$git_dir"/sast-config tmp-pre-commit-folder
fi

docker run --volume "$git_dir"/tmp-pre-commit-folder:/sast-files $docker_image --context pre-commit || exit_code=1

rm -rf tmp-pre-commit-folder

if [ "$exit_code" != 0 ]; then
  echo
  echo "ERROR: SAST scan failed. Your changes were reset."
fi

exit $exit_code
