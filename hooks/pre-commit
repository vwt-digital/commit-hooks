#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#

git_dir=$(git rev-parse --show-toplevel)
branch_name=$(git branch | grep \* | cut -d ' ' -f2)
exit_code=0

echo "Running pre-commit hook on branch ${branch_name}: "
##############################################################################
##########                         SAST scan                        ##########
##############################################################################
echo "SAST scan..."
if [ ! -d "tmp-pre-commit-folder" ]; then
  mkdir tmp-pre-commit-folder
else
  echo -e "\e[1;31mError: folder tmp-pre-commit-folder already exists.\e[0m"
  exit 1
fi
touch tmp-pre-commit-folder/config.txt; echo "--no-trufflehog" > tmp-pre-commit-folder/config.txt
for file in $(git diff-index --name-only --diff-filter=ACMT --cached HEAD -- ); do
  cp "$file" tmp-pre-commit-folder
done

[ -d "$git_dir"/node_modules ] && cp -r "$git_dir"/node_modules tmp-pre-commit-folder


docker run --volume "$(pwd)"/tmp-pre-commit-folder:/tmp "eu.gcr.io/vwt-p-gew1-dat-cloudbuilders/cloudbuilder-sast" --context pre-commit || exit_code=1

rm -rf tmp-pre-commit-folder

if ! docker run hello-world > /dev/null 2>&1; then
  echo -e "\e[1;31mError: Docker run wasn't executed with sufficient permissions."\
          "See this page: https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user"\
          "for instructions on managing Docker as a non-root user.ðŸ”— '\e[0m"
fi
if [ "$exit_code" != 0 ] ; then
  echo
  echo "ERROR: SAST scan failed. Your changes were not committed."
  echo "in $git_dir/$file:"
  exit 1
fi
