#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#

git_dir=$(git rev-parse --show-toplevel)
branch_name=$(git branch | grep \* | cut -d ' ' -f2)

echo "Running pre-commit hook on branch ${branch_name}: "
##############################################################################
##########                         SAST scan                        ##########
##############################################################################
echo "SAST scan..."

for file in $(git diff-index --name-only --diff-filter=ACM --cached HEAD -- ); do
  source /opt/sast-scan.sh --type python --type typescript --target $file --no_out_dir
done
if [ $? -ne 0 ] ; then
        echo
        echo "ERROR: SAST scan failed. Your changes were not committed."
        echo "in $git_dir/$file:"
        exit 1
fi
