#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#

git_dir=$(git rev-parse --show-toplevel)
branch_name=$(git branch | grep \* | cut -d ' ' -f2)
exit_code=0

hook_branch=$(cd "$(dirname "$0")"/.. && git rev-parse --abbrev-ref HEAD)

echo "Running post-commit hook on branch ${branch_name}: "
##############################################################################
##########                         SAST scan                        ##########
##############################################################################
echo "SAST scan..."

if [[ $hook_branch == "develop" ]]; then
  docker_image="eu.gcr.io/vwt-d-gew1-dat-cloudbuilders/cloudbuilder-sast"
else
  docker_image="eu.gcr.io/vwt-p-gew1-dat-cloudbuilders/cloudbuilder-sast"
fi

docker run --volume "$git_dir":/tmp $docker_image --target /tmp --context post-commit || exit_code=1
if [ "$exit_code" != 0 ] ; then
  echo
  echo -e "\e[1;31mError: Trufflehog failed. You should reset your commit and review it. \e[0m"
  exit 1
fi
